name: Build Wheels

concurrency: ${{ github.workflow }}

on:
  push:
    branches:
      - "*"
  
  release:
    types:
      - published
  
jobs:
  manylinux:
    strategy:
      fail-fast: false
      matrix:
        target:
          - manylinux-x86_64
          - manylinux-aarch64
          
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
        
      - name: Enable buildkit cache
        uses: jashandeep-sohi/cache@31e100c3910cca70aeab409babf9ee1889ef1e1c
        env:
          FORCE_SAVE_CACHE: "true"
        with:
          path: /tmp/buildkit-cache
          key: buildkit-${{ runner.os }}-${{ matrix.target }}-${{ github.sha }}-${{ github.run_attempt }}
          restore-keys: |
            buildkit-${{ runner.os }}-${{ matrix.target }}-${{ github.sha }}-
            buildkit-${{ runner.os }}-${{ matrix.target }}-
            buildkit-${{ runner.os }}-
      
      - name: Buildkit state from cache
        uses: jashandeep-sohi/runs-action@v1.0.0
        env:
          POST_IF: "true"
          BUILDKIT_CACHE_PATH: "/tmp/buildkit-cache"
          BUILDKIT_CONTAINER: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          BUILDKIT_PRUNE_KEEP: 5g
        with:
          main-run: |
            ls -lha $BUILDKIT_CACHE_PATH
            if test ! -f "$BUILDKIT_CACHE_PATH/buildkit-state.tar.xz"; then
              echo "Nothing to restore"
              exit 0
            fi
            
            docker buildx stop
            if docker run --rm --volumes-from "$BUILDKIT_CONTAINER" -v "$BUILDKIT_CACHE_PATH":/cache alpine sh -exc 'apk --no-cache add xz && tar t -Jf /cache/buildkit-state.tar.xz > /dev/null && tar x -J -C / -f /cache/buildkit-state.tar.xz'; then
              echo "Buildkit runner state restored from cache"
            fi
            
          post-run: |
            docker buildx stop
            docker buildx prune --verbose --force --keep-storage "$BUILDKIT_PRUNE_KEEP"
            
            docker run --rm --volumes-from "$BUILDKIT_CONTAINER" -v "$BUILDKIT_CACHE_PATH":/cache alpine sh -exc 'apk --no-cache add xz && tar c -J -C / -f /cache/buildkit-state.tar.xz /var/lib/buildkit'
            echo "Created buildkit runner state archive"

      - name: Bake
        run: docker buildx bake ${{ matrix.target }}
        
      - name: Add wheels as build artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
      
      - name: Add wheels to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ./wheelhouse/*.whl
    
